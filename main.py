#Imports
from aiogram import Bot, Dispatcher, executor, types
import random
import asyncio
import db
import markup as nav

#Start bot
bot = Bot(token="5700642711:AAFkz7gTymGySSOGUiSjskQE_9Fm6T7K9-4", parse_mode="html")
dp = Dispatcher(bot)


#Create Data Base
db.CreateDB()

@dp.message_handler(commands='start')
async def start(message):
    await bot.send_sticker(chat_id=message.from_user.id,
                           sticker=r"CAACAgIAAxkBAAEEtoZifVbPDYz-LyFOSd6XYfCUSGPb1wACOAsAAk7kmUsysUfS2U-M0CQE")
    await message.reply(f'<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è!</b> <a href="tg://user?id={message.from_user.id}">{message.from_user.first_name}</a>\n\n'
        f'‚ñ´Ô∏è <b>–í—ã–±–∏—Ä–∞–π —Å–≤–æ—é —Ä–æ–ª—å –≤ —ç—Ç–æ–π –∏–≥—Ä–µ!</b>\n\n'
        f'‚ñ´Ô∏è <b>–†–æ–ª—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–º–µ–Ω–∏—Ç—å –Ω–∞–∂–∞–≤ /start</b>\n\n'
        f'‚ñ´Ô∏è <b>–ö–æ–º–∞–Ω–¥–∞:</b> /help <b>- –≤—ã–¥–∞—Å—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥</b>\n\n', reply_markup = nav.persMenu)
        
@dp.message_handler(commands='help')
async def help(message):
    await message.reply("<b>—Å–∫–æ—Ä–æ</b>")
    
    #–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–µ–Ω—Ç–∞
@dp.message_handler(lambda msg: msg.text.startswith('–ú–µ–Ω—Ç—è—Ä–∞'))
async def ment(message):
    await message.reply(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–µ—Å—Ç–Ω—É—é –∏ –¥–æ–±–ª–µ—Å—Ç–Ω—É—é –∂–∏–∑–Ω—å!', reply_markup = nav.mentMenu)
    return
    #–ø–∞—Ç—Ä—É–ª—å –≥–æ—Ä–æ–¥–∞
cooldown = []
@dp.message_handler(lambda msg: msg.text.startswith('–ü–∞—Ç—Ä—É–ª—å –≥–æ—Ä–æ–¥–∞'))
async def jerk(message):
    db.cursor.execute(f"SELECT name FROM users where id = {message.from_user.id}")
    if db.cursor.fetchone() == None:
        db.InsertValue(message.from_user.first_name, message.from_user.id)
    if message.from_user.id in cooldown:
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.answer(f'<b>‚ö†Ô∏è–í–∞—à–∞ —Å–º–µ–Ω–∞ –µ—â–µ –Ω–µ –ø—Ä–∏—à–ª–∞!</b>\n\n'
                f'<b>üè¶–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –¥–µ–Ω–µ–≥:</b> {row[0]}‚ìú\n\n'
                f'<b>‚öôÔ∏è–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
        return
    select = random.randint(1, 3)
    if select == 1 or select == 3:
        plus = random.randint(1, 1000)
        db.UpdateValue('work', plus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'‚úÖ <b>–í—ã —É–¥–∞—á–Ω–æ –ø—Ä–æ–ø–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞–ª–∏ –≥–æ—Ä–æ–¥!\n–ü—Ä–∏—à–ª–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞: +</b>{plus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í–∞—à–∞ —Å–º–µ–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    elif select == 2:
        minus = random.randint(1, 200)
        db.UpdateValueMinus('work', minus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'üî• <b>–û –Ω–µ—Ç! –ú–∞—à–∏–Ω–∞ —Å–ª–æ–º–∞–ª–∞—Å—å –ø—Ä–∏ –ø–∞—Ç—Ä—É–ª–∏—Ä–æ–≤–∞–Ω–∏–∏!\n–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Ä–µ–º–æ–Ω—Ç –∑–∞ —Å–≤–æ–π —Å—á–µ—Ç: -</b>{minus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–ú–∞—à–∏–Ω—É —á–∏–Ω—è—Ç, –ø–æ–ø—Ä–æ–±—É–π –ø–∞—Ç—Ä—É–ª–∏—Ä–≤–æ–∞—Ç—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    cooldown.append(message.from_user.id)
    await asyncio.sleep(60)
    cooldown.remove(message.from_user.id)
    #–ø–æ—Å—Ç
@dp.message_handler(lambda msg: msg.text.startswith('–ü–æ—Å—Ç'))
async def jerk(message):
    db.cursor.execute(f"SELECT name FROM users where id = {message.from_user.id}")
    if db.cursor.fetchone() == None:
        db.InsertValue(message.from_user.first_name, message.from_user.id)
    if message.from_user.id in cooldown:
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.answer(f'<b>‚ö†Ô∏è–í–∞—à–∞ —Å–º–µ–Ω–∞ –µ—â–µ –Ω–µ –ø—Ä–∏—à–ª–∞!</b>\n\n'
                f'<b>üè¶–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –¥–µ–Ω–µ–≥:</b> {row[0]}‚ìú\n\n'
                f'<b>‚öôÔ∏è–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
        return
    select = random.randint(1, 3)
    if select == 1 or select == 3:
        plus = random.randint(1, 235)
        db.UpdateValue('work', plus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'‚úÖ <b>–í—ã —É–¥–∞—á–Ω–æ –ø—Ä–æ—Å—Ç–æ—è–ª –ø–æ—Å—Ç!\n–ü—Ä–∏—à–ª–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞: +</b>{plus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í–∞—à–∞ —Å–º–µ–Ω–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    elif select == 2:
        minus = random.randint(1, 100)
        db.UpdateValueMinus('work', minus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'üî• <b>–û –Ω–µ—Ç! –ö –≤–∞–º –≤–æ—Ä–≤–∞–ª–∏—Å—å –≥—Ä–∞–±–∏—Ç–µ–ª–∏ —Å –æ—Ä—É–∂–∏–µ–º!\n–£ –≤–∞—Å –∑–∞–±—Ä–∞–ª–∏ —á—Ç–æ –±—ã–ª–æ –≤ –∫–æ—à–µ–ª—å–∫–µ: -</b>{minus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–ü–æ–ø—Ä–æ–±—É–π —Å—Ç–æ—è—Ç—å –Ω–∞ –ø–æ—Å—Ç—É —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    cooldown.append(message.from_user.id)
    await asyncio.sleep(60)
    cooldown.remove(message.from_user.id)
    
    #–ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ö–∞—Ü–∫–µ—Ä–∞
@dp.message_handler(lambda msg: msg.text.startswith('–•–∞–∫–µ—Ä'))
async def ment(message):
    await message.reply(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç—ë–º–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É!', reply_markup = nav.hackerMenu)
    return
    #–í–∑–ª–∞–º—ã–≤–∞–µ–º –ø–µ–Ω—Ç–∞–≥–æ–Ω
cooldown = []
@dp.message_handler(lambda msg: msg.text.startswith('–ü–∞—Ç—Ä—É–ª—å –≥–æ—Ä–æ–¥–∞'))
async def jerk(message):
    db.cursor.execute(f"SELECT name FROM users where id = {message.from_user.id}")
    if db.cursor.fetchone() == None:
        db.InsertValue(message.from_user.first_name, message.from_user.id)
    if message.from_user.id in cooldown:
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.answer(f'<b>‚ö†Ô∏è–í—ã –µ—â–µ –Ω–µ –∑–∞–ª—è–≥–ª–∏ –Ω–∞ –¥–Ω–æ –ø–æ—Å–ª–µ –ø—Ä–æ—à–ª–æ–≥–æ</b>\n\n'
                f'<b>üè¶–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –¥–µ–Ω–µ–≥:</b> {row[0]}‚ìú\n\n'
                f'<b>‚öôÔ∏è–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
        return
    select = random.randint(1, 3)
    if select == 1 or select == 3:
        plus = random.randint(1, 25000)
        db.UpdateValue('work', plus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'‚úÖ <b>–í—ã —É–¥–∞—á–Ω–æ –≤–∑–ª–æ–º–∞–ª–∏ –ø–µ–Ω—Ç–∞–≥–æ–Ω!\n–í–∞—à –¥–æ—Ö–æ–¥: +</b>{plus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í—ã —Ä–µ—à–∏–ª–∏ –∑–∞–ª–µ—á—å –Ω–∞ –¥–Ω–æ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    elif select == 2:
        minus = random.randint(1, 30000)
        db.UpdateValueMinus('work', minus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'üî• <b>–û –Ω–µ—Ç! –í–∞—Å –≤—ã—á–µ—Å–ª–∏–ª–∏!\n–£ –≤–∞—Å –∏–∑—ä—è–ª–∏ –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É –¥–µ–Ω–µ–≥: -</b>{minus}‚ìú\n\n'
                f'üè¶<b>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ @drenix_x\n\n–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í—ã –≤ —Ç—é—Ä—å–º–µ, –ø–æ–ø—Ä–æ–±—É–π  —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    cooldown.append(message.from_user.id)
    await asyncio.sleep(60)
    cooldown.remove(message.from_user.id)
    
@dp.message_handler(lambda msg: msg.text.startswith('–í–∑–ª–æ–º–∞—Ç—å –±–∞–Ω–∫'))
async def jerk(message):
    db.cursor.execute(f"SELECT name FROM users where id = {message.from_user.id}")
    if db.cursor.fetchone() == None:
        db.InsertValue(message.from_user.first_name, message.from_user.id)
    if message.from_user.id in cooldown:
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.answer(f'<b>‚ö†Ô∏è–í—ã –Ω–∞ –¥–Ω–µ.</b>\n\n'
                f'<b>üè¶–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –¥–µ–Ω–µ–≥:</b> {row[0]}‚ìú\n\n'
                f'<b>‚öôÔ∏è–ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
        return
    select = random.randint(1, 3)
    if select == 1 or select == 3:
        plus = random.randint(1, 200000)
        db.UpdateValue('work', plus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'‚úÖ <b>–í—ã —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–ª–∏ –±–∞–Ω–∫!\n–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ —Å–µ–±–µ: +</b>{plus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í—ã —Ä–µ—à–∏–ª–∏ –∑–∞–ª–µ—á—å –Ω–∞ –¥–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    elif select == 2:
        minus = random.randint(1, 350000)
        db.UpdateValueMinus('work', minus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'üî• <b>–û –Ω–µ—Ç! –í–∞—Å –∞—Ä–µ—Å—Ç–æ–≤–∞–ª–∏!\n–£ –∏–∑—ä—è–ª–∏ –∫—Ä—É–ø–Ω—É—é —Å—É–º–º—É –±–∞–±–æ–∫: -</b>{minus}‚ìú\n\n'
                f'üè¶<b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–í—ã –≤ —Ç—é—Ä—å–º–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    cooldown.append(message.from_user.id)
    await asyncio.sleep(60)
    cooldown.remove(message.from_user.id)
    
    
    #–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –º–∞–π–Ω–∏–Ω–≥–∞
@dp.message_handler(lambda msg: msg.text.startswith('–ú–∞–π–Ω–µ—Ä'))
async def ment(message):
    await message.reply(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–≤–µ—Ç–ª—É—é —Å—Ç–æ—Ä–æ–Ω—É –∑–∞—Ä–∞–±–æ—Ç–∫–∞!', reply_markup = nav.mainMenu)
    return
    

#Working
cooldown = []
@dp.message_handler(lambda msg: msg.text.startswith('–ú–∞–π–Ω–∏—Ç—å'))
async def jerk(message):
    db.cursor.execute(f"SELECT name FROM users where id = {message.from_user.id}")
    if db.cursor.fetchone() == None:
        db.InsertValue(message.from_user.first_name, message.from_user.id)
    if message.from_user.id in cooldown:
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.answer(f'<b>‚ö†Ô∏è–¢—ã —É–∂–µ –º–∞–π–Ω–∏–ª!</b>\n\n'
                f'<b>üè¶–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –∫–æ–∏–Ω–æ–≤:</b> {row[0]}‚ìú\n\n'
                f'<b>‚öôÔ∏è–ü–æ–ø—Ä–æ–±—É–π –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
        return
    select = random.randint(1, 3)
    if select == 1 or select == 3:
        plus = random.randint(1, 150000)
        db.UpdateValue('work', plus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'‚úÖ <b>–¢—ã —É–¥–∞—á–Ω–æ –ø–æ–º–∞–π–Ω–∏–ª! –ò –∑–∞ —ç—Ç–æ –≤—Ä–µ–º—è —Ç–≤–æ—è –º–∞—à–∏–Ω–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∞: +</b>{plus}‚ìú\n\n'
                f'üè¶<b>–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –∫–æ–∏–Ω–æ–≤:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–ú–∞—à–∏–Ω–µ –Ω–∞–¥–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å, –ø–æ–ø—Ä–æ–±—É–π –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    elif select == 2:
        minus = random.randint(1, 100000)
        db.UpdateValueMinus('work', minus, message.from_user.id)
        db.con.commit()
        for row in db.cursor.execute(f"SELECT work FROM users where id={message.from_user.id}"):
            await message.reply(f'üî• <b>–û –Ω–µ—Ç! –ú–∞–π–Ω–∏–Ω–≥ –Ω–∞–∫—Ä—ã–ª—Å—è –∏ –º–∞—à–∏–Ω–∞ —Å–ª–æ–º–∞–ª–∞—Å—å. –ù–∞ —ç—Ç–æ–º —Ç—ã –ø–æ—Ç–µ—Ä—è–ª: -</b>{minus}‚ìú\n\n'
                f'üè¶<b>–ù–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É –∫–æ–∏–Ω–æ–≤:</b> {row[0]}‚ìú\n\n'
                f'‚öôÔ∏è<b>–ú–∞—à–∏–Ω–µ –Ω–∞–¥–æ –ø–æ—á–∏–Ω–∏—Ç—å, –ø–æ–ø—Ä–æ–±—É–π –∑–∞–ø—É—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É!</b>')
    cooldown.append(message.from_user.id)
    await asyncio.sleep(60)
    cooldown.remove(message.from_user.id)

#Dashboard
@dp.message_handler(lambda msg: msg.text.startswith('üèÜ–¢–æ–ø'))
async def top(message):
    db.cursor.execute(f"SELECT name, work FROM users ORDER BY work DESC LIMIT 10")
    leadermsg = "<b>   üèÜ–¢–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤:</b>\n\n"
    fetchleader = db.cursor.fetchall()
    for i in fetchleader:
        leadermsg += f"{fetchleader.index(i) + 1}. {i[0]}:  {i[1]}‚ìú\n"
    await message.reply(str(leadermsg))

#About
@dp.message_handler(lambda msg: msg.text.startswith('üìï–û –±–æ—Ç–µ'))
async def top(message):
    await message.reply('<b>‚ùï–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ‚ñÇ\n<b>üß†–†–∞–∑—Ä–∞–±—á–∏–∫: </b>@drenix_x\n<b>üë§–ü–æ–¥–¥–µ—Ä–∂–∫–∞: </b>@drenix_x')
#Polling
executor.start_polling(dp, skip_updates=True)